import { useState } from "react";
import { motion } from "framer-motion";

const paths = [
  {
    d: "M212.282 26.8744H185.902C185.477 23.6613 184.429 20.7018 182.772 17.996C181.115 15.2902 178.878 12.9649 176.088 11.0201C173.285 9.07528 169.985 7.55326 166.219 6.45403C162.438 5.35479 158.26 4.80518 153.658 4.80518C148.646 4.80518 144.143 5.43935 140.149 6.7077C136.156 7.97605 132.758 9.73764 129.954 11.9643C127.15 14.205 124.983 16.8968 123.454 20.0113C121.925 23.1398 121.16 26.5221 121.16 30.158V34.7241C121.16 38.4446 121.925 41.855 123.454 44.9413C124.983 48.0276 127.15 50.6912 129.954 52.9319C132.758 55.1727 136.156 56.9202 140.149 58.2026C144.143 59.471 148.646 60.1051 153.658 60.1051C158.671 60.1051 163.174 59.471 167.167 58.2026C171.161 56.9343 174.559 55.1868 177.363 52.9319C180.167 50.6912 182.333 48.0276 183.862 44.9413C185.392 41.855 186.156 38.4587 186.156 34.7241V33.4557H212.282V59.8374H219.929V6.07352H212.282V26.8744ZM178.51 34.7382C178.51 37.5285 177.915 40.0934 176.726 42.4187C175.536 44.744 173.851 46.7311 171.685 48.38C169.518 50.0288 166.898 51.2972 163.854 52.185C160.795 53.0729 157.397 53.5238 153.658 53.5238C149.92 53.5238 146.521 53.0869 143.463 52.185C140.404 51.2972 137.799 50.0288 135.618 48.38C133.437 46.7311 131.78 44.744 130.591 42.4187C129.402 40.0934 128.807 37.5426 128.807 34.7382V30.1721C128.807 27.3818 129.402 24.831 130.591 22.5057C131.78 20.1804 133.451 18.1933 135.618 16.5444C137.784 14.8956 140.404 13.6272 143.463 12.7394C146.521 11.8516 149.92 11.4147 153.658 11.4147C157.397 11.4147 160.795 11.8516 163.854 12.7394C166.912 13.6272 169.518 14.8956 171.685 16.5444C173.851 18.1933 175.522 20.1804 176.726 22.5057C177.915 24.831 178.51 27.3818 178.51 30.1721V34.7382Z",
  },
  {
    d: "M153.658 18.8838C153.404 23.8726 152.299 27.2972 150.345 29.1574C148.391 31.0177 145.332 32.0323 141.169 32.2014C145.332 32.3706 148.391 33.3852 150.345 35.2455C152.299 37.1057 153.404 40.5303 153.658 45.5191C153.913 40.5303 154.99 37.1057 156.901 35.2455C158.813 33.3852 161.886 32.3706 166.134 32.2014C161.886 32.0323 158.813 31.0177 156.901 29.1574C154.99 27.2972 153.913 23.8726 153.658 18.8838Z",
  },
  {
    d: "M212.282 81.4135H136.453V66.1934H128.807C128.807 66.1934 128.807 99.4656 128.807 103.941C128.806 108.677 134.039 114 138.792 114C150.118 114 219.929 113.376 219.929 113.376V66.1934H212.282V81.4135ZM212.282 106.78C212.282 106.78 151.273 106.78 141.289 106.78C138.615 106.78 136.453 104.439 136.453 100.957C136.453 97.4764 136.453 88.0089 136.453 88.0089H212.282V106.78Z",
  },
  {
    d: "M309.139 10.5126H277.278V1H269.631V10.5126H237.771V17.108H309.139V10.5126Z",
  },
  {
    d: "M284.925 60.7389C291.722 60.7389 297.131 59.4424 301.167 56.8634C305.203 54.2845 307.228 50.1835 307.228 44.5745C307.228 38.9656 305.203 34.8646 301.167 32.2857C297.131 29.7067 291.722 28.4102 284.925 28.4102H261.985C255.188 28.4102 249.765 29.7067 245.743 32.2857C241.708 34.8646 239.683 38.9656 239.683 44.5745C239.683 50.1835 241.693 54.2845 245.743 56.8634C249.779 59.4424 255.188 60.7389 261.985 60.7389H284.925ZM247.329 44.5745C247.329 41.0795 248.49 38.4583 250.827 36.7108C253.163 34.9633 256.888 34.0895 261.985 34.0895H284.925C290.023 34.0895 293.733 34.9633 296.084 36.7108C298.42 38.4583 299.581 41.0795 299.581 44.5745C299.581 48.0695 298.406 50.6908 296.084 52.4383C293.747 54.1858 290.023 55.0596 284.925 55.0596H261.985C256.888 55.0596 253.163 54.1858 250.827 52.4383C248.49 50.6908 247.329 48.0695 247.329 44.5745Z",
  },
  {
    d: "M333.354 6.07324H325.707V64.0367H333.354V38.4161H349.921V31.8207H333.354V6.07324Z",
  },
  {
    d: "M254.976 102.679V94.6039H333.354V78.6827C333.354 74.2821 330.125 70.3784 325.707 70.3784C324.011 70.3784 247.329 70.3784 247.329 70.3784V76.9738C247.329 76.9738 319.518 76.9738 321.515 76.9738C324.228 76.9738 325.707 78.9104 325.707 81.065C325.707 83.2197 325.707 88.0085 325.707 88.0085H247.329C247.329 88.0085 247.329 100.46 247.329 104.935C247.329 108.923 251.612 113.361 255.615 113.361C257.472 113.361 334.614 113.361 334.614 113.361V106.766H259.082C256.817 106.78 254.976 104.948 254.976 102.679Z",
  },
  {
    d: "M437.418 6.10143V6.07324H351.054V12.6687H412.453C412.425 11.4708 412.581 10.5829 412.595 10.5125L413.983 10.7802C413.983 10.7943 413.827 11.5976 413.869 12.6827H422.111L417.48 18.0944C418.656 18.4467 420.128 18.489 421.87 18.2071L422.097 19.6023C421.247 19.7432 420.454 19.7996 419.703 19.7996C418.486 19.7996 417.424 19.6023 416.503 19.25L351.606 94.9281V94.9844L429.786 94.618V113.39H437.432V93.4624V88.0085V36.1331H454V29.5377H437.432V6.10143H437.418ZM429.771 88.0085L367.012 88.5722L429.771 15.7268V88.0085Z",
  },
  {
    d: "M415.999 16.9686C414.836 15.7784 414.524 14.0498 414.482 12.732H413.063C413.106 14.3048 413.489 16.4019 414.978 17.9463C415.559 18.5556 416.283 19.009 417.105 19.3207L418.098 18.1588C417.261 17.918 416.552 17.5212 415.999 16.9686Z",
  },
  {
    d: "M437.418 6.10143V6.07324H351.054V12.6687H412.453C412.425 11.4708 412.581 10.5829 412.595 10.5125L413.983 10.7802C413.983 10.7943 413.827 11.5976 413.869 12.6827H422.111L417.48 18.0944C418.656 18.4467 420.128 18.489 421.87 18.2071L422.097 19.6023C421.247 19.7432 420.454 19.7996 419.703 19.7996C418.486 19.7996 417.424 19.6023 416.503 19.25L351.606 94.9281V94.9844L429.786 94.618V113.39H437.432V93.4624V88.0085V36.1331H454V29.5377H437.432V6.10143H437.418ZM429.771 88.0085L367.012 88.5722L429.771 15.7268V88.0085Z",
  },
  {
    d: "M415.999 16.9686C414.836 15.7784 414.524 14.0498 414.482 12.732H413.063C413.106 14.3048 413.489 16.4019 414.978 17.9463C415.559 18.5556 416.283 19.009 417.105 19.3207L418.098 18.1588C417.261 17.918 416.552 17.5212 415.999 16.9686Z",
  },
  {
    d: "M29.9107 20.2788H28.9195C28.4238 21.223 28.084 22.2659 27.9141 23.3651L29.9107 20.2788Z",
  },
  {
    d: "M44.7932 31.6515L42.1028 27.4941C41.1965 28.988 39.568 29.9886 37.6847 29.9886C35.8014 29.9886 34.1729 28.988 33.2667 27.4941L30.5762 31.6515C32.3745 33.4977 34.8951 34.6674 37.6847 34.6674C40.4743 34.6674 42.9949 33.4977 44.7932 31.6515Z",
  },
  {
    d: "M47.4834 23.6047C47.3418 22.4209 46.9737 21.2935 46.4497 20.2788H45.3311L47.4834 23.6047Z",
  },
  {
    d: "M19.9276 39.7693H25.3227L30.5762 31.6518C28.8628 29.8762 27.8008 27.4804 27.8008 24.8309C27.8008 24.3377 27.8432 23.8445 27.914 23.3794L2.6377 62.6418H10.5392L23.5101 42.5878H19.9276V39.7693Z",
  },
  {
    d: "M37.6842 14.9941C41.4934 14.9941 44.7928 17.1362 46.4495 20.2789H73.3685V13.6835H41.5076V1H33.8609V13.6835H2V20.2789H28.919C30.5757 17.1362 33.8751 14.9941 37.6842 14.9941Z",
  },
  {
    d: "M44.792 31.6519L50.0455 39.7694H54.4636V42.5879H51.8722L64.8431 62.6419H72.7447L47.4966 23.605C47.5533 23.9996 47.5816 24.4083 47.5816 24.817C47.5674 27.4805 46.5054 29.8763 44.792 31.6519Z",
  },
  {
    d: "M92.4712 77.4249C88.6338 74.1695 83.3236 72.5488 76.5266 72.5488H31.9779C25.1809 72.5488 19.8566 74.1836 16.0333 77.4249C12.5215 80.4126 10.6382 85.035 10.3408 91.264C10.6099 87.459 11.8277 84.5559 13.98 82.5688C16.444 80.2858 20.5222 79.1442 26.2146 79.1442H31.9779H74.6433H76.5266C81.766 79.1442 85.5185 80.2858 87.7841 82.5688C90.0498 84.8518 91.1826 88.3186 91.1826 92.9692C91.1826 97.6198 90.0498 101.087 87.7841 103.37C85.5185 105.653 81.766 106.794 76.5266 106.794H74.6433H31.9779H26.2146C20.5222 106.794 16.444 105.653 13.98 103.37C11.8277 101.369 10.6099 98.4795 10.3408 94.6745C10.6382 100.903 12.5074 105.526 16.0333 108.514C19.8566 111.769 25.1809 113.39 31.9779 113.39H76.5266C83.3236 113.39 88.6479 111.755 92.4712 108.514C96.2945 105.258 98.2204 100.086 98.2204 92.9833C98.2204 85.8806 96.3087 80.6803 92.4712 77.4249Z",
  },
  {
    d: "M25.9184 106.229H31.6817C26.4423 106.229 22.6898 105.087 20.4242 102.804C18.1585 100.521 17.0257 97.0542 17.0257 92.4036C17.0257 87.753 18.1585 84.2862 20.4242 82.0032C22.6898 79.7201 26.4423 78.5786 31.6817 78.5786H25.9184C20.2259 78.5786 16.1477 79.7201 13.6838 82.0032C11.5314 83.9902 10.0445 87.2879 9.77547 91.093C9.74715 91.6567 9.71882 92.2063 9.71882 92.7982C9.71882 93.3901 9.74715 93.9397 9.77547 94.5034C10.0445 98.3085 11.5314 100.817 13.6838 102.804C16.1477 105.087 20.2259 106.229 25.9184 106.229Z",
  },
  {
    d: "M96.3078 6.07324H88.6611V64.9246H96.3078V36.7673H112.875V30.1719H96.3078V6.07324Z",
  },
  {
    d: "M27.9277 23.3652C27.8569 23.8444 27.8145 24.3235 27.8145 24.8168C27.8145 27.4662 28.8765 29.8761 30.5899 31.6377L33.2804 27.4803C32.7989 26.7052 32.5157 25.7892 32.5157 24.8168C32.5157 21.9701 34.838 19.6588 37.6984 19.6588C40.5588 19.6588 42.8811 21.9701 42.8811 24.8168C42.8811 25.8033 42.5979 26.7052 42.1165 27.4803L44.807 31.6377C46.5204 29.862 47.5824 27.4662 47.5824 24.8168C47.5824 24.4081 47.5541 23.9994 47.4974 23.6048L45.345 20.2789H46.4637C44.8211 17.1362 41.5076 14.9941 37.6984 14.9941C33.8893 14.9941 30.5899 17.1362 28.9331 20.2789H29.9244L27.9277 23.3652Z",
  },
  {
    d: "M25.3365 39.769L23.5098 42.5876H51.8589L50.0322 39.769H25.3365Z",
  },
  {
    d: "M19.9268 39.769V42.5876H23.5093L25.336 39.769H19.9268Z",
  },
  {
    d: "M10.1887 188.482L37 141.783L63.8113 188.482H72L44.6604 140.978H72V134H2V140.978H29.2075L2 188.482H10.1887Z",
    color: "black",
  },
  {
    d: "M91.0892 220.893H14.9109V197.562H7V247H99V197.562H91.0892V220.893ZM91.0892 240.089H14.9109V227.804H91.0892V240.089Z",
    color: "black",
  },
  {
    d: "M99.2105 134H91V190.5H99.2105V163.583H117V156.653H99.2105V134Z",
    color: "black",
  },
  {
    d: "M134.934 217.741H127V247H220V240.147H134.934V217.741Z",
    color: "black",
  },
  {
    d: "M223 194.536H122V200.589H223V194.536Z",
    color: "black",
  },
  {
    d: "M220 169.402H133.962V134H126V176.375H220V169.402Z",
    color: "black",
  },
  {
    d: "M358.508 214.049C354.842 210.834 349.821 209.227 343.474 209.227H314.983V191.412H363.352V184.446H258.663V191.412H307.032V209.227H278.54C272.179 209.227 267.158 210.834 263.507 214.049C259.841 217.263 258 221.952 258 228.113C258 234.275 259.841 238.963 263.507 242.178C267.173 245.392 272.194 247 278.54 247H343.474C349.835 247 354.842 245.392 358.508 242.178C362.174 238.963 364 234.275 364 228.113C364 221.952 362.174 217.263 358.508 214.049ZM353.207 236.745C351.308 238.933 348.054 240.035 343.474 240.035H278.54C273.946 240.035 270.692 238.933 268.793 236.745C266.893 234.558 265.951 231.685 265.951 228.113C265.951 224.541 266.893 221.669 268.793 219.481C270.692 217.293 273.946 216.192 278.54 216.192H343.474C348.068 216.192 351.308 217.293 353.207 219.481C355.107 221.669 356.064 224.556 356.064 228.113C356.049 231.685 355.107 234.558 353.207 236.745Z",
    color: "black",
  },
  {
    d: "M259.281 175.366H269.897L311.493 141.165L353.088 175.366H363.719L322.656 141.03H364V134H259V141.03H300.33L259.281 175.366Z",
    color: "black",
  },
];

const dots = [
  { cx: 382, cy: 243, r: 4, delay: 0.0 },
  { cx: 399, cy: 243, r: 4, delay: 0.15 },
  { cx: 416, cy: 243, r: 4, delay: 0.3 },
];

const SvgLogo = () => {
  const [filled, setFilled] = useState(false);

  return (
    <motion.svg
      width="23.54vw"
      height="12.97vw"
      viewBox="0 0 452 249"
      preserveAspectRatio="none"
      fill="none"
      stroke="#0B0B0B"
      strokeWidth="2"
    >
      {paths.map((path, i) => (
        <motion.path
          key={i}
          d={path.d}
          initial={{ pathLength: 0, fillOpacity: 0 }}
          animate={{ pathLength: 1, fillOpacity: filled ? 1 : 0 }}
          transition={{
            duration: 2,
            ease: "easeInOut",
            repeat: 2,
            repeatType: "loop",
            repeatDelay: 1,
          }}
          fill={path.color || "#010202"}
          onAnimationComplete={() => {
            if (i === 0) setFilled(true);
          }}
        />
      ))}
      {filled &&
        dots.map(({ cx, cy, r, delay }, idx) => {
          const C = 2 * Math.PI * r;
          return (
            <motion.circle
              key={idx}
              cx={cx}
              cy={cy}
              r={r}
              fill="black"
              stroke="#0B0B0B"
              strokeWidth={2}
              style={{ strokeDasharray: C, strokeDashoffset: C }}
              initial={{ strokeDashoffset: C, fillOpacity: 0 }}
              animate={{ strokeDashoffset: 0, fillOpacity: 1 }}
              transition={{
                duration: 0.8,
                ease: "easeInOut",
                delay: 0.8 + delay,
                repeat: Infinity,
                repeatType: "loop",
                repeatDelay: 0,
              }}
            />
          );
        })}
    </motion.svg>
  );
};

export default SvgLogo;
